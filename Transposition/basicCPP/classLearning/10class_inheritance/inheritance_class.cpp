#include <iostream>
using namespace std;
//basic & son ----public protected private访问权限
//同名成员：调用son中的成员变量：son中的同名 成员函数：son中的同名
//想调用base中的，必须使用作用域base：：————注意：编译器会隐藏父类中所有和子类同名的成员函数，即使子类的成员函数和父类的形参不同。

//静态同名：类内声明，类外初始化
//可以使用son::base::m_a;前者是指类名，后者指的是作用域

//调用顺序： 如果调用一个子类，那么先调用它的父类构造函数，然后子类，然后子类析构，然后父类析构

//关于类的内存调用：每个对象的成员变量是存放在栈区的；如果是静态的，就放在全局数据区；类的成员函数和非成员函数代码都是存放在代码区的

//尽管类的非静态成员函数和类的静态成员函数都是放在代码区的，但是只有静态成员函数能够通过类来调用，而非静态的只能通过类对象调用。（因为非静态类成员函数中都有一个this指针）
//总之，函数的代码段不会放在对象存储的空间中,形参也不会呢。


class Person{
public:
    int m_a;
    int m_b;

    int setAge(int a,int b){
        m_a = a;
        m_b = b;
        return m_a;
    }


};

int main(){
    Person p1;
    cout<<sizeof(p1)<<endl;
}